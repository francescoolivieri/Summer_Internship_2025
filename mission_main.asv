clc

global units
units = 'km';

% Load the simulation settings
s = get_sim_settings();

% Create chosen scenario for the simulation
[scene, sceneFigure] = scenarioBuilder(s);

% Generate a .ssp file if needed
if s.sim_use_ssp_file
    generateSSP3D(s, scene);
end

% Generate .env file 
writeENV3D(s);

% Generate .bty file 
writeBTY3D(s.bellhop_file_name + ".bty", scene, s);
% plotbdry3d(s.bellhop_file_name + ".bty")

% Run bellhop and draw environment
data = draw_true_env(s, scene);

%% Testing shd plot functions (not working)
% plotshdpol( s.bellhop_file_name + ".shd",  0, 0, 10 )
% 
% plotshd3d(s.bellhop_file_name + ".shd");
%%

% Initialize filter 
    data = init_filter(data,s);

% Initial Waypoints
InitialWaypoints = [s.InitialPosition; data.x(1) data.y(1) -7];

for n=1:3
        
    % Print state
    fprintf('Iteration nr %d \n',n)

    % Get action
    data = pos_next_measurement(data,s);

    % Take measurement
    data = generate_data(data,s);

    % Update estimate
    % data=ukf(data,s);

    % Display result
    % plot_result(data,s);
end

mission = uavMission(HomeLocation=[s.InitialPosition], Frame="LocalENU");
addTakeoff(mission, 20);

for i=1:3    
    addWaypoint(mission, [data.x(i) data.y(i) data.z(i)]);
end

addWaypoint(mission, mission.HomeLocation);
addLand(mission, mission.HomeLocation);

% show mission at the end, in the same figure as the scenario
figure(sceneFigure)
show(mission)
hold on